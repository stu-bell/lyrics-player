(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))t(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const l of r.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&t(l)}).observe(document,{childList:!0,subtree:!0});function i(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function t(o){if(o.ep)return;o.ep=!0;const r=i(o);fetch(o.href,r)}})();const h=e=>{const n=document.getElementById(e);if(n===null)throw new Error(`Cannot find element ${e}.`);return n},k=(e,n=null)=>i=>i.hasOwnProperty(e)?i[e]:n;function L(e){var n=e.lastIndexOf(".");return n===-1?"":e.substring(n+1).toLowerCase()}const O=async e=>new Promise((n,i)=>{const t=new FileReader;t.onload=function(o){n(o.target.result)},t.onerror=o=>{var r;i("Error reading file:"+((r=o.target.error)==null?void 0:r.message))},t.readAsText(e)});function R(e){const i=e.replace(/\r\n/g,`
`).split(`
`),t=i[0].split("	").map(r=>r.trim());return i.slice(1).map(r=>{const l=r.split("	");if(l.join("")==="")return null;let c={};return t.forEach((w,a)=>{c[w]=l[a]||""}),c}).filter(r=>!!r)}function j(e,n){const i=new Blob([e],{type:"text/plain"}),t=URL.createObjectURL(i),o=document.createElement("a");o.href=t,o.download=n,document.body.appendChild(o),o.click(),document.body.removeChild(o)}const P=/\[\d?\d?:?\d?\d\.?\d?\d?\d?\]/g;function D(e){const n=e.replace(`\r
`,`
`).replace("\r",`
`).split(`
`).filter(t=>t.trim()!=="").filter(t=>!(t.startsWith("[")&&t.endsWith("]")));let i=[{timestamp:0,text:""}];return n.forEach(t=>{const o=t.trim(),r=o.match(P);if(r&&r.length>0){const l=o.replace(P,"").trim();r.forEach(c=>{i.push({timestamp:C(c),text:l})})}}),i.sort((t,o)=>(t.timestamp||0)-(o.timestamp||0)),i}function z(e){const i=e.split(`
`).map(t=>({text:t,timestamp:null}));return[{timestamp:0,text:""},...i]}function V(e,n){return(L(n.name)==="lrc"?D:z)(e)}function C(e){let n;const t=e.replace(/[[\]]/g,"").split(":");if(t.length===1)n=parseFloat(t[0]);else{const o=parseInt(t[0]),r=parseFloat(t[1]);n=o*60+r}return n}let u,s={lines:[],filesList:[],fileType:"txt",numberOfLines:10,currentLineIndex:0,currentFileIndex:0};function q(e,n=""){const i=document.createElement("li");i.textContent=n,i.classList.add("zero"),e.prepend(i),e.lastElementChild&&e.lastElementChild.remove();const t=e.firstElementChild;if(t){t.offsetWidth,t.classList.remove("zero"),t.classList.add("large");const o=e.getElementsByTagName("li")[1];o&&o.classList.remove("large")}}function G(e,n=""){e.querySelectorAll(".zero").forEach(o=>o.remove());const i=e.firstElementChild;if(i){i.classList.remove("large"),i.classList.add("zero");const o=e.getElementsByTagName("li")[1];o&&o.classList.add("large"),i.addEventListener("transitionend",r=>r.target.remove())}const t=document.createElement("li");t.textContent=n,e.appendChild(t)}let T=null,S;function F(e){if(T&&clearTimeout(T),s.lines[s.currentLineIndex+1]&&s.lines[s.currentLineIndex+1].hasOwnProperty("timestamp")&&s.lines[s.currentLineIndex+1].timestamp!==null&&s.lines[s.currentLineIndex+1].timestamp>=0){const n=e||s.lines[s.currentLineIndex].timestamp||0,t=(s.lines[s.currentLineIndex+1].timestamp||0)-n;t>=0&&(T=setTimeout(()=>{S=Date.now(),A()},t*1e3))}}const U=(e=500)=>Date.now()-S<e;function H(e,n,i=0){u=n,s.lines=e,console.log(i);const t=e.findIndex(r=>r.timestamp>=i);for(t?s.currentLineIndex=t-1:s.currentLineIndex=0;u.firstChild;)u.firstChild.remove();const o=s.lines.slice(s.currentLineIndex,s.currentLineIndex+s.numberOfLines).map(k("text",""));for(let r of o){const l=document.createElement("li");l.textContent=r,u.appendChild(l)}F(i)}function A(){s.currentLineIndex++,s.currentLineIndex>=s.lines.length&&E(),F();const e=s.lines[s.currentLineIndex+s.numberOfLines-1],n=e?e.text:"";G(u,n)}function J(){s.currentLineIndex--,F();const e=s.lines[s.currentLineIndex],n=e?e.text:"";q(u,n)}let I,$;function K(){return $}function _(){return I||(I=new window.AudioContext),I}async function M(e){const n=_(),i=await e.arrayBuffer();return new Promise((t,o)=>{n.decodeAudioData(i,t,o)})}function Y(e){const i=_().createBufferSource();return i.buffer=e,i}function Q(e){const n=e.context,i=n.createGain();return e.connect(i),i.connect(n.destination),i}function X(e){const n=Y(e);return{source:n,gain:Q(n)}}function Z(e,n=0,i,t,o){const r=e.source.context;e.source.start(i,t,o),e.gain.gain.setValueAtTime(0,r.currentTime),e.gain.gain.linearRampToValueAtTime(1,r.currentTime+n),$=e}function ee(e,n=0){const i=e.source.context,t=i.currentTime+n;e.gain.gain.setValueAtTime(1,i.currentTime),e.gain.gain.linearRampToValueAtTime(0,t),e.source.stop(t)}function ne(e,n,i=1,t,o){n?Z(n,i,void 0,t,o):console.log("crossFade called but graphNext is null"),e&&ee(e,i)}let x,p,f,d,m;const y="_playlist.tsv";async function te(e){m=await re(e),m.length&&(d=-1,f=b(m[0]))}function ie(){return f&&(d++,x=p,p=f),d+1<m.length?f=b(m[d+1]):f=null,p}function oe(){return x&&(d--,f=p,p=x),d>0&&(x=b(m[d-1])),p}function b(e){return{lyrics:{file:e.lyricsFile,text:O(e.lyricsFile),offset:e.lyrics_offset?parseFloat(e.lyrics_offset):0},audio:{file:e.audioFile,buffer:e.audioFile?M(e.audioFile):null,offset:e.audio_start?C(e.audio_start):0,end:e.audio_end?C(e.audio_end):void 0}}}async function re(e){const n=e.find(o=>o.name.toLowerCase()===y);n||(window.alert(`Oops! We couldn't find a ${y} file in that folder! Save one in that folder and edit it to make your playlist.`),le(e),window.alert(`We've just downloaded a ${y} file for you, with the tracks we could find in the folder you chose. Open it in a spreadsheet and put the lyrics and audio files in the correct order. Then refresh the sing along app and retry.`),location.reload());const i=R(await O(n)),t=se(i,e);return t.length||window.alert(`Error: ${y} empty`),t}function se(e,n){let i=[],t=[];const o=a=>n.find(g=>g.name===a),r=a=>{if(a.lyrics){a.lyricsFile=o(a.lyrics);const g=L(a.lyrics);if(a.lyricsFile){if(!(g==="lrc"||g==="txt"))return t.push(`Only .lrc or .txt files supported, but found ${a.lyrics}`),null}else return t.push(`Playlist includes ${a.lyrics} but we couldn't find that in the folder.`),null}else return t.push(`Each playlist row must contain a lyrics file. ${a.audio?a.audio:""}`),null;return a.audio?(a.audioFile=o(a.audio),a.audioFile||t.push(`Playlist includes ${a.audio} but we couldn't find that in the folder.`)):i.push(a.lyrics),a},l=e.map(r).filter(a=>a!==null);l.length||window.alert(`Error: the ${y} file contained no valid rows, or we couldn't find any corresponding files.`);const c=t.join(`
`);c&&window.alert(`Error: ${c}`);const w=i.join(`
`);return w&&window.alert(`Warning: the following tracks don't have audio: ${w}`),l}function le(e){const n=e.filter(l=>L(l.name)==="mp3").map(l=>l.name),i=e.filter(l=>{const c=L(l.name);return c==="lrc"||c==="txt"}).map(l=>l.name),t=n.length>i.length?n.length:i.length;let o=[];for(let l=0;l<t;l++)o.push(`${i[l]||""}	${n[l]||""}	`);const r=`lyrics	audio	audio_start	audio_end	lyrics_offset\r
`+o.join(`\r
`);j(r,"_playlist.tsv")}let B;async function ae(e,n){B=n;const t=e.target.files,o=Array.from(t);await te(o),E()}let v=null;async function N(e){if(e){const n=await e.audio.buffer,i=n?X(n):null,t=V(await e.lyrics.text,e.lyrics.file),o=1;ne(K(),i,o,e.audio.offset),H(t,B,e.lyrics.offset);const r=e.audio.end?e.audio.end:n==null?void 0:n.duration;r&&(v&&clearTimeout(v),v=setTimeout(E,(r-e.audio.offset-o)*1e3))}}async function E(){N(ie())}async function ce(){N(oe())}const W=h("lyricsContainer");h("fileInputButton").addEventListener("click",()=>h("fileInput").click());h("fileInput").addEventListener("change",e=>{ae(e,W),h("home").classList.add("hidden")});document.addEventListener("keydown",function(e){e.key==="s"&&W.classList.toggle("hidden")});document.addEventListener("keydown",function(e){(e.key===" "||e.key==="ArrowDown"||e.key==="ArrowRight")&&!U(500)?A():e.key==="ArrowUp"||e.key==="ArrowLeft"?J():e.key==="0"&&(console.log("reset"),F())});document.addEventListener("touchstart",function(){A()});document.addEventListener("keydown",function(e){e.key==="n"?E():e.key==="p"&&ce()});(!window.FileReader||!window.FileList||!window.File||!window.Blob)&&alert("Your browser does not support the required APIs. Please use a modern browser.");
